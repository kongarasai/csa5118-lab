#include <stdio.h>
#include <string.h>
#include <ctype.h>

char keyMatrix[5][5];

void removeDuplicates(char *str) {
    int i, j, k = 0;
    int seen[26] = {0};
    for (i = 0; str[i]; i++) {
        char ch = toupper(str[i]);
        if (ch == 'J') ch = 'I';
        if (!seen[ch - 'A']) {
            str[k++] = ch;
            seen[ch - 'A'] = 1;
        }
    }
    str[k] = '\0';
}

void generateMatrix(char *key) {
    int seen[26] = {0}, x = 0;
    char c;
    removeDuplicates(key);
    for (int i = 0; key[i]; i++) {
        c = key[i];
        if (c == 'J') c = 'I';
        if (!seen[c - 'A']) {
            keyMatrix[x / 5][x % 5] = c;
            seen[c - 'A'] = 1;
            x++;
        }
    }
    for (c = 'A'; c <= 'Z'; c++) {
        if (c == 'J') continue;
        if (!seen[c - 'A']) {
            keyMatrix[x / 5][x % 5] = c;
            seen[c - 'A'] = 1;
            x++;
        }
    }
}

void getPos(char c, int *row, int *col) {
    if (c == 'J') c = 'I';
    for (int i = 0; i < 5; i++)
        for (int j = 0; j < 5; j++)
            if (keyMatrix[i][j] == c) {
                *row = i;
                *col = j;
                return;
            }
}

void playfairEncrypt(char *text) {
    char digraphs[100];
    int k = 0;
    for (int i = 0; text[i]; i++) {
        char a = toupper(text[i]);
        if (a == 'J') a = 'I';
        if (!isalpha(a)) continue;
        digraphs[k++] = a;
    }
    digraphs[k] = '\0';

    for (int i = 0; i < k; i += 2) {
        if (i == k - 1 || digraphs[i] == digraphs[i + 1]) {
            digraphs[k++] = 'X';
        }
    }

    for (int i = 0; i < k; i += 2) {
        int r1, c1, r2, c2;
        getPos(digraphs[i], &r1, &c1);
        getPos(digraphs[i + 1], &r2, &c2);

        if (r1 == r2)
            printf("%c%c", keyMatrix[r1][(c1 + 1) % 5], keyMatrix[r2][(c2 + 1) % 5]);
        else if (c1 == c2)
            printf("%c%c", keyMatrix[(r1 + 1) % 5][c1], keyMatrix[(r2 + 1) % 5][c2]);
        else
            printf("%c%c", keyMatrix[r1][c2], keyMatrix[r2][c1]);
    }
    printf("\n");
}

int main() {
    char key[100], plaintext[100];

    printf("Enter keyword: ");
    gets(key);
    printf("Enter plaintext: ");
    gets(plaintext);

    generateMatrix(key);
    printf("Encrypted: ");
    playfairEncrypt(plaintext);

    return 0;
}
